@page "/"
@using Configo.Server.Domain
@inject ApplicationManager ApplicationManager
@inject TagGroupManager TagGroupManager
@inject TagManager TagManager
@inject ApiKeyManager ApiKeyManager

@if (_tagGroups == null || _applications == null || _apiKeys == null)
{
    <p>...loading</p>
    return;
}

<MudText Typo="Typo.h1" GutterBottom="true">
    Configo
</MudText>

<MudGrid>
    <MudItem xs="12" sm="6" md="4" lg="3" xl="2">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6"><MudIcon Icon="@Icons.Material.Filled.Category"/> Tag Groups</MudText>
                    <MudText Typo="Typo.caption">
                        Tag groups describe a characteristic of a deployed application.
                        Possible tag groups are environments, timezones, machines, ...
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudList DisableGutters="true">
                    @foreach (var tagGroup in _tagGroups)
                    {
                        <MudListItem>
                            @tagGroup.Name
                        </MudListItem>
                    }
                </MudList>
            </MudCardContent>
            <MudCardActions>
                <MudButton Color="Color.Primary" Href="@Routes.TagGroups">Manage</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>

    @foreach (var tagGroup in _tagGroups)
    {
        <MudItem xs="12" sm="6" md="4" lg="3" xl="2">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">
                            <MudIcon Icon="@tagGroup.Icon.Value"/> @tagGroup.Name
                        </MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudList DisableGutters="true">
                        @foreach (var tag in _tagsByGroupId[tagGroup.Id])
                        {
                            <MudListItem>
                                @tag.Name
                            </MudListItem>
                        }
                    </MudList>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Color="Color.Primary" Href="@Routes.Tags(tagGroup.Name)">Manage</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    }

    <MudItem xs="12" sm="6" md="4" lg="3" xl="2">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6"><MudIcon Icon="@Icons.Material.Filled.Cloud"/> Applications</MudText>
                    <MudText Typo="Typo.caption">
                        Applications are unique types of processes, each with a different JSON configuration schema.
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudList DisableGutters="true">
                    @foreach (var application in _applications)
                    {
                        <MudListItem>
                            @application.Name
                        </MudListItem>
                    }
                </MudList>
            </MudCardContent>
            <MudCardActions>
                <MudButton Color="Color.Primary" Href="@Routes.Applications">Manage</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>

    <MudItem xs="12" sm="6" md="4" lg="3" xl="2">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6"><MudIcon Icon="@Icons.Material.Filled.Category"/> API Keys</MudText>
                    <MudText Typo="Typo.caption">
                        API keys give a single instance of a deployed application access to its configuration.
                        An API key is constrained to one application and zero or more tags
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudList DisableGutters="true">
                    @foreach (var apiKey in _apiKeys)
                    {
                        <MudListItem>
                            @apiKey.Key.Substring(0, 5)...
                        </MudListItem>
                    }
                </MudList>
            </MudCardContent>
            <MudCardActions>
                <MudButton Color="Color.Primary" Href="@Routes.ApiKeys">Manage</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    private List<TagGroupModel>? _tagGroups;
    private readonly Dictionary<int, List<TagModel>> _tagsByGroupId = new Dictionary<int, List<TagModel>>();
    private List<ApplicationListModel>? _applications;
    private Dictionary<int, TagModel> _tagsById = new Dictionary<int, TagModel>();
    private List<ApiKeyListModel>? _apiKeys;

    protected override async Task OnInitializedAsync()
    {
        _applications = await ApplicationManager.GetAllApplicationsAsync(CancellationToken);
        _tagGroups = await TagGroupManager.GetAllTagGroupsAsync(CancellationToken);
        _apiKeys = await ApiKeyManager.GetAllApiKeysAsync(CancellationToken);
        foreach (var tagGroup in _tagGroups)
        {
            _tagsByGroupId[tagGroup.Id] = await TagManager.GetTagsOfGroupAsync(tagGroup.Id, CancellationToken);
        }
        _tagsById = _tagsByGroupId.Values.SelectMany(t => t).ToDictionary(t => t.Id);
        await base.OnInitializedAsync();
    }

}
